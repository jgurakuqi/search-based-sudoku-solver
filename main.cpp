#include <iostream>
#include <iterator>
#include "matrix.h"

using namespace std;


/**
 * @brief This method prints the content of the vector values.
 * 
 * @tparam T 
 * @param stream 
 * @param values 
 * @return ostream& 
 */
template<class T>
ostream& operator<<(ostream& stream, const std::vector<T>& values)
{
	for (auto &value : values)
	{
		stream << value << " ";
	}
    stream << '\n';
    return stream;
}



int main()
{
	vector<vector<int>> sudokuField
	{
		// {0,0,0,0,0,0,0,0,0},
		// {0,0,0,0,0,0,0,0,0},
		// {0,0,0,0,0,0,0,0,0},
		// {0,0,0,0,0,0,0,0,0},
		// {0,0,0,0,0,0,0,0,0},
		// {0,0,0,0,0,0,0,0,0},
		// {0,0,0,0,0,0,0,0,0},
		// {0,0,0,0,0,0,0,0,0},
		// {0,0,0,0,0,0,0,0,0}
		{3,7,0,5,0,0,0,0,6},
		{0,0,0,3,6,0,0,1,2},
		{0,0,0,0,9,1,7,5,0},
		{0,0,0,1,5,4,0,7,0},
		{0,0,3,0,7,0,6,0,0},
		{0,5,0,6,3,8,0,0,0},
		{0,6,4,9,8,0,0,0,0},
		{5,9,0,0,2,6,0,0,0},
		{2,0,0,0,0,5,0,6,4}

	};
	vector<vector<vector<int>>> sudokuCellsDomains
	{
		{{1,2,3,4,5,6,7,8,9},{1,2,3,4,5,6,7,8,9},{1,2,3,4,5,6,7,8,9},{1,2,3,4,5,6,7,8,9},{1,2,3,4,5,6,7,8,9},{1,2,3,4,5,6,7,8,9},{1,2,3,4,5,6,7,8,9},{1,2,3,4,5,6,7,8,9},{1,2,3,4,5,6,7,8,9}},
		{{1,2,3,4,5,6,7,8,9},{1,2,3,4,5,6,7,8,9},{1,2,3,4,5,6,7,8,9},{1,2,3,4,5,6,7,8,9},{1,2,3,4,5,6,7,8,9},{1,2,3,4,5,6,7,8,9},{1,2,3,4,5,6,7,8,9},{1,2,3,4,5,6,7,8,9},{1,2,3,4,5,6,7,8,9}},
		{{1,2,3,4,5,6,7,8,9},{1,2,3,4,5,6,7,8,9},{1,2,3,4,5,6,7,8,9},{1,2,3,4,5,6,7,8,9},{1,2,3,4,5,6,7,8,9},{1,2,3,4,5,6,7,8,9},{1,2,3,4,5,6,7,8,9},{1,2,3,4,5,6,7,8,9},{1,2,3,4,5,6,7,8,9}},
		{{1,2,3,4,5,6,7,8,9},{1,2,3,4,5,6,7,8,9},{1,2,3,4,5,6,7,8,9},{1,2,3,4,5,6,7,8,9},{1,2,3,4,5,6,7,8,9},{1,2,3,4,5,6,7,8,9},{1,2,3,4,5,6,7,8,9},{1,2,3,4,5,6,7,8,9},{1,2,3,4,5,6,7,8,9}},
		{{1,2,3,4,5,6,7,8,9},{1,2,3,4,5,6,7,8,9},{1,2,3,4,5,6,7,8,9},{1,2,3,4,5,6,7,8,9},{1,2,3,4,5,6,7,8,9},{1,2,3,4,5,6,7,8,9},{1,2,3,4,5,6,7,8,9},{1,2,3,4,5,6,7,8,9},{1,2,3,4,5,6,7,8,9}},
		{{1,2,3,4,5,6,7,8,9},{1,2,3,4,5,6,7,8,9},{1,2,3,4,5,6,7,8,9},{1,2,3,4,5,6,7,8,9},{1,2,3,4,5,6,7,8,9},{1,2,3,4,5,6,7,8,9},{1,2,3,4,5,6,7,8,9},{1,2,3,4,5,6,7,8,9},{1,2,3,4,5,6,7,8,9}},
		{{1,2,3,4,5,6,7,8,9},{1,2,3,4,5,6,7,8,9},{1,2,3,4,5,6,7,8,9},{1,2,3,4,5,6,7,8,9},{1,2,3,4,5,6,7,8,9},{1,2,3,4,5,6,7,8,9},{1,2,3,4,5,6,7,8,9},{1,2,3,4,5,6,7,8,9},{1,2,3,4,5,6,7,8,9}},
		{{1,2,3,4,5,6,7,8,9},{1,2,3,4,5,6,7,8,9},{1,2,3,4,5,6,7,8,9},{1,2,3,4,5,6,7,8,9},{1,2,3,4,5,6,7,8,9},{1,2,3,4,5,6,7,8,9},{1,2,3,4,5,6,7,8,9},{1,2,3,4,5,6,7,8,9},{1,2,3,4,5,6,7,8,9}},
		{{1,2,3,4,5,6,7,8,9},{1,2,3,4,5,6,7,8,9},{1,2,3,4,5,6,7,8,9},{1,2,3,4,5,6,7,8,9},{1,2,3,4,5,6,7,8,9},{1,2,3,4,5,6,7,8,9},{1,2,3,4,5,6,7,8,9},{1,2,3,4,5,6,7,8,9},{1,2,3,4,5,6,7,8,9}}
	};
	cout << sudokuField;
	cout << sudokuCellsDomains;
	return 0;
}
